Ext.data.JsonP.Deft_promise_Chain({"mixins":[],"aliases":{},"inheritdoc":null,"tagname":"class","alternateClassNames":["Deft.Chain"],"html_meta":{},"superclasses":["Ext.Base"],"code_type":"ext_define","extends":"Ext.Base","uses":[],"subclasses":[],"files":[{"href":"Chain.html#Deft-promise-Chain","filename":"Chain.js"}],"meta":{},"html":"<div><pre class=\"hierarchy\"><h4>Alternate names</h4><div class='alternate-class-name'>Deft.Chain</div><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>Deft.promise.Chain</strong></div></div><h4>Requires</h4><div class='dependency'><a href='#!/api/Deft.promise.Promise' rel='Deft.promise.Promise' class='docClass'>Deft.promise.Promise</a></div><h4>Files</h4><div class='dependency'><a href='source/Chain.html#Deft-promise-Chain' target='_blank'>Chain.js</a></div></pre><div class='doc-contents'><p>A collection of useful static methods for chaining execution of an Array of Functions using <a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Promises</a>.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='method-parallel' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Chain'>Deft.promise.Chain</span><br/><a href='source/Chain.html#Deft-promise-Chain-method-parallel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Chain-method-parallel' class='name expandable'>parallel</a>( <span class='pre'>fns, scope</span> ) : <a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Deft.promise.Promise</a><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Execute an Array (or Promise of an Array) of functions in parallel. ...</div><div class='long'><p>Execute an Array (or <a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Promise</a> of an Array) of functions in parallel.</p>\n\n<p>The specified functions may optionally return their results as <a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Promises</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fns</span> : Function[]/<a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Deft.promise.Promise</a><div class='sub-desc'><p>The Array (or Promise of an Array) of functions to execute.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Optional scope in which to execute the specified functions.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Deft.promise.Promise</a></span><div class='sub-desc'><p>Promise of an Array of results for each function call (in the same order).</p>\n</div></li></ul></div></div></div><div id='method-pipeline' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Chain'>Deft.promise.Chain</span><br/><a href='source/Chain.html#Deft-promise-Chain-method-pipeline' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Chain-method-pipeline' class='name expandable'>pipeline</a>( <span class='pre'>fns, initialValue, scope</span> ) : <a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Deft.promise.Promise</a><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Execute an Array (or Promise of an Array) of functions as a pipeline, where each function's result is passed to the s...</div><div class='long'><p>Execute an Array (or <a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Promise</a> of an Array) of functions as a pipeline, where each function's result is passed to the subsequent function as input.</p>\n\n<p>The specified functions may optionally return their results as <a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Promises</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fns</span> : Function[]/<a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Deft.promise.Promise</a><div class='sub-desc'><p>The Array (or Promise of an Array) of functions to execute.</p>\n</div></li><li><span class='pre'>initialValue</span> : Object<div class='sub-desc'><p>Initial value to be passed to the first function in the pipeline.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Optional scope in which to execute the specified functions.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Deft.promise.Promise</a></span><div class='sub-desc'><p>Promise of the result value for the final function in the pipeline.</p>\n</div></li></ul></div></div></div><div id='method-sequence' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.promise.Chain'>Deft.promise.Chain</span><br/><a href='source/Chain.html#Deft-promise-Chain-method-sequence' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.promise.Chain-method-sequence' class='name expandable'>sequence</a>( <span class='pre'>fns, scope</span> ) : <a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Deft.promise.Promise</a><strong class='static signature' >static</strong></div><div class='description'><div class='short'>Execute an Array (or Promise of an Array) of functions sequentially. ...</div><div class='long'><p>Execute an Array (or <a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Promise</a> of an Array) of functions sequentially.</p>\n\n<p>The specified functions may optionally return their results as <a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Promises</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fns</span> : Function[]/<a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Deft.promise.Promise</a><div class='sub-desc'><p>The Array (or Promise of an Array) of functions to execute.</p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p>Optional scope in which to execute the specified functions.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Deft.promise.Promise\" rel=\"Deft.promise.Promise\" class=\"docClass\">Deft.promise.Promise</a></span><div class='sub-desc'><p>Promise of an Array of results for each function call  (in the same order).</p>\n</div></li></ul></div></div></div></div></div></div></div>","component":false,"linenr":12,"members":{"property":[],"cfg":[],"method":[],"css_var":[],"event":[],"css_mixin":[]},"requires":["Deft.promise.Promise"],"enum":null,"private":null,"mixedInto":[],"name":"Deft.promise.Chain","id":"class-Deft.promise.Chain","inheritable":null,"parentMixins":[],"statics":{"property":[],"cfg":[],"method":[{"owner":"Deft.promise.Chain","tagname":"method","meta":{"static":true},"name":"parallel","id":"method-parallel"},{"owner":"Deft.promise.Chain","tagname":"method","meta":{"static":true},"name":"pipeline","id":"method-pipeline"},{"owner":"Deft.promise.Chain","tagname":"method","meta":{"static":true},"name":"sequence","id":"method-sequence"}],"css_var":[],"event":[],"css_mixin":[]},"singleton":false,"override":null});